{
    "repository_url": "https://github.com/chrisdten3/charts",
    "files": [
      {
        "file_name": "README.md",
        "document_type": "md",
        "content": "# Welcome to charts! A financial personal project on exploring portfolios!\nVisiting the site - https://charts-app-rpxz.onrender.com/\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/README.md"
      },
      {
        "file_name": "app.py",
        "document_type": "py",
        "content": "from flask import Flask, request, jsonify, render_template\nfrom flask_cors import CORS\nfrom efCalc import get_portfolio_allocations\nfrom efCalc import get_history\nfrom efCalc import get_stock_data\n\napp = Flask(__name__)\nCORS(app)\n\n@app.route(\"/api/portfolio\", methods=[\"GET\"])\ndef get_portfolio():\n    tickers = request.args.get(\"tickers\")\n    tickers = tickers.split(\",\")\n    #tickers = ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA']\n    max_sharpe_portfolio, min_vol_portfolio = get_portfolio_allocations(tickers)\n\n    return jsonify({\n        \"max_sharpe_portfolio\": max_sharpe_portfolio,\n        \"min_vol_portfolio\": min_vol_portfolio\n    })\n\n@app.route(\"/api/history\", methods=[\"GET\"])\ndef get_stock_history():\n    ticker = request.args.get(\"ticker\")\n    history = get_history(ticker)\n\n    return history\n\n@app.route(\"/api/stock\", methods=[\"GET\"])\ndef get_stock():\n    ticker = request.args.get(\"ticker\")\n    info = get_stock_data(ticker)\n\n    return info\n\n\nif __name__ == \"__main__\":\n    app.run(host='0.0.0.0', port=8000)\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/app.py"
      },
      {
        "file_name": "efCalc.py",
        "document_type": "py",
        "content": "import yfinance as yf\nimport pandas as pd  \nimport numpy as np\nimport json\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport scipy.optimize as sco\n\nnp.random.seed(777)\n\ndef get_stock_data(symbol):\n    stock = yf.Ticker(symbol)\n    today_open = stock.history(period=\"1d\")['Open'][0]\n\n    news = stock.news\n    top_3_news = sorted(news, key=lambda x: x['providerPublishTime'], reverse=True)[:3]\n\n    output = {\n        \"symbol\": symbol,\n        \"today_open\": today_open,\n        \"news\": top_3_news\n    }\n\n    return json.dumps(output)\n\ndef get_history(symbol):\n    name = yf.Ticker(symbol)\n    ticker = name.history(period=\"1y\")\n\n    ticker.index = pd.to_datetime(ticker.index)\n\n    ticker['Date'] = ticker.index\n\n    if not {'Date', 'Open', 'High', 'Low', 'Close'}.issubset(ticker.columns):\n        raise ValueError(\"DataFrame must contain 'Date', 'Open', 'High', 'Low', 'Close' columns\")\n    \n\n    series_data = []\n\n    for index,row in ticker.iterrows():\n        timestamp = int(row['Date'].timestamp() * 1000)\n        open_price = row['Open']\n        high_price = row['High']\n        low_price = row['Low']\n        close_price = row['Close']\n        \n        series_data.append([timestamp, open_price, high_price, low_price, close_price])\n    \n    output = {\n        \"series\": [{\n            \"data\": series_data\n        }]\n    }\n    \n    return json.dumps(output)\n\n\ndef get_portfolio_allocations(tickers, period=\"1y\", num_portfolios=25000, risk_free_rate=0.0515):\n    # Grab data for multiple tickers\n    data = yf.download(tickers, period=period)[\"Close\"]\n    returns = data.pct_change()\n    mean_returns = returns.mean()\n    cov_matrix = returns.cov()\n\n    def portfolio_annualised_performance(weights, mean_returns, cov_matrix):\n        returns = np.dot(mean_returns, weights) * 252\n        std = np.sqrt(np.dot(weights.T, np.dot(cov_matrix, weights))) * np.sqrt(252)\n        return std, returns\n\n    weights_record = np.random.random((num_portfolios, len(tickers)))\n    weights_record /= weights_record.sum(axis=1)[:, np.newaxis]\n\n    portfolio_std_devs = np.zeros(num_portfolios)\n    portfolio_returns = np.zeros(num_portfolios)\n\n    for i in range(num_portfolios):\n        portfolio_std_devs[i], portfolio_returns[i] = portfolio_annualised_performance(\n            weights_record[i], mean_returns, cov_matrix\n        )\n\n    sharpe_ratios = (portfolio_returns - risk_free_rate) / portfolio_std_devs\n\n    max_sharpe_idx = np.argmax(sharpe_ratios)\n    min_vol_idx = np.argmin(portfolio_std_devs)\n\n    max_sharpe_allocation = {data.columns[i]: round(weight * 100, 2) for i, weight in enumerate(weights_record[max_sharpe_idx])}\n    min_vol_allocation = {data.columns[i]: round(weight * 100, 2) for i, weight in enumerate(weights_record[min_vol_idx])}\n\n    max_sharpe_portfolio = {\n        \"Annualised Return\": round(portfolio_returns[max_sharpe_idx], 2),\n        \"Annualised Volatility\": round(portfolio_std_devs[max_sharpe_idx], 2),\n        \"Allocation\": max_sharpe_allocation\n    }\n\n    min_vol_portfolio = {\n        \"Annualised Return\": round(portfolio_returns[min_vol_idx], 2),\n        \"Annualised Volatility\": round(portfolio_std_devs[min_vol_idx], 2),\n        \"Allocation\": min_vol_allocation\n    }\n\n    return max_sharpe_portfolio, min_vol_portfolio\n\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/efCalc.py"
      },
      {
        "file_name": "index.html",
        "document_type": "html",
        "content": "\u003C!DOCTYPE html\u003E\n\u003Chtml lang=\"en\"\u003E\n  \u003Chead\u003E\n    \u003Cmeta charset=\"utf-8\" /\u003E\n    \u003Clink rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" /\u003E\n    \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\" /\u003E\n    \u003Cmeta name=\"theme-color\" content=\"#000000\" /\u003E\n    \u003Cmeta\n      name=\"description\"\n      content=\"Web site created using create-react-app\"\n    /\u003E\n    \u003Clink rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" /\u003E\n    \u003C!--\n      manifest.json provides metadata used when your web app is installed on a\n      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n    --\u003E\n    \u003Clink rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" /\u003E\n    \u003C!--\n      Notice the use of %PUBLIC_URL% in the tags above.\n      It will be replaced with the URL of the `public` folder during the build.\n      Only files inside the `public` folder can be referenced from the HTML.\n\n      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n      work correctly both with client-side routing and a non-root public URL.\n      Learn how to configure a non-root public URL by running `npm run build`.\n    --\u003E\n    \u003Ctitle\u003EReact App\u003C/title\u003E\n  \u003C/head\u003E\n  \u003Cbody\u003E\n    \u003Cnoscript\u003EYou need to enable JavaScript to run this app.\u003C/noscript\u003E\n    \u003Cdiv id=\"root\"\u003E\u003C/div\u003E\n    \u003C!--\n      This HTML file is a template.\n      If you open it directly in the browser, you will see an empty page.\n\n      You can add webfonts, meta tags, or analytics to this file.\n      The build step will place the bundled scripts into the \u003Cbody\u003E tag.\n\n      To begin the development, run `npm start` or `yarn start`.\n      To create a production bundle, use `npm run build` or `yarn build`.\n    --\u003E\n  \u003C/body\u003E\n\u003C/html\u003E\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/public/index.html"
      },
      {
        "file_name": "server.js",
        "document_type": "js",
        "content": "const express = require('express');\nconst axios = require('axios');\nconst app = express();\nconst port = 5011;\n\napp.get('/stock-data', async (req, res) =\u003E {\n  try {\n    const apiKey = 'L3F6TGY1X7ZYVGYN';\n    const symbols = [\"AAPL\", \"AMZN\", \"MSFT\", \"GOOGL\", \"TSLA\"];\n    const promises = symbols.map(symbol =\u003E {\n      const url = `https://www.alphavantage.co/query?function=TIME_SERIES_WEEKLY&symbol=${symbol}&apikey=${apiKey}`;\n      return axios.get(url);\n    });\n\n    // Wait for all requests to complete\n    const responses = await Promise.all(promises);\n\n    // Check if all requests were successful\n    const errors = responses.filter(response =\u003E response.status !== 200);\n    if (errors.length \u003E 0) {\n      console.log('Errors:', errors.map(error =\u003E error.status));\n      return res.status(500).send('Error fetching data');\n    }\n\n    // Extract data from responses\n    const data = responses.map(response =\u003E response.data);\n\n    // Data is successfully fetched for all symbols\n    res.json(data);\n  } catch (error) {\n    console.error('Error:', error.message);\n    res.status(500).send('Internal Server Error');\n  }\n});\n\napp.listen(port, () =\u003E {\n  console.log(`Example app listening on port ${port}`);\n});\n\n\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/server.js"
      },
      {
        "file_name": "App.css",
        "document_type": "css",
        "content": ".App {\n  text-align: center;\n}\n\n.App-logo {\n  height: 40vmin;\n  pointer-events: none;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  .App-logo {\n    animation: App-logo-spin infinite 20s linear;\n  }\n}\n\n.App-header {\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n.App-link {\n  color: #61dafb;\n}\n\n@keyframes App-logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/App.css"
      },
      {
        "file_name": "App.js",
        "document_type": "js",
        "content": "import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from './pages/home';\nimport Dashboard from './pages/dashboard';\nimport { StockContextProvider } from './context/context';\nimport How from './pages/how';\n\nfunction App() {\n  return (\n    \u003CStockContextProvider\u003E\n      \u003Cdiv className=\"App\"\u003E\n        \u003Cdiv className='bg-white'\u003E\n          \u003CRoutes\u003E\n            \u003CRoute path=\"/\" element={\u003CHome /\u003E} /\u003E\n            \u003CRoute path=\"/dashboard\" element={\u003CDashboard /\u003E} /\u003E\n            \u003CRoute path=\"/how\" element={\u003CHow /\u003E} /\u003E\n          \u003C/Routes\u003E\n        \u003C/div\u003E\n      \u003C/div\u003E\n    \u003C/StockContextProvider\u003E\n  );\n}\n\nexport default App;\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/App.js"
      },
      {
        "file_name": "App.test.js",
        "document_type": "js",
        "content": "import { render, screen } from '@testing-library/react';\nimport App from './App';\n\ntest('renders learn react link', () =\u003E {\n  render(\u003CApp /\u003E);\n  const linkElement = screen.getByText(/learn react/i);\n  expect(linkElement).toBeInTheDocument();\n});\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/App.test.js"
      },
      {
        "file_name": "PortfolioComponent.js",
        "document_type": "js",
        "content": "import { useEffect, useState } from \"react\";\n\nconst PortfolioComponent = ({ stocks }) =\u003E {\n    const [maxSharpeAllocation, setMaxSharpeAllocation] = useState(null);\n    const [maxSharpeAnnualisedReturn, setMaxSharpeAnnualisedReturn] = useState(null);\n    const [maxSharpeAnnualisedVolatility, setMaxSharpeAnnualisedVolatility] = useState(null);\n    const [minVolAllocation, setMinVolAllocation] = useState(null);\n    const [minVolAnnualisedReturn, setMinVolAnnualisedReturn] = useState(null);\n    const [minVolAnnualisedVolatility, setMinVolAnnualisedVolatility] = useState(null);\n\n    useEffect(() =\u003E {\n        const symbols = stocks.map(stock =\u003E stock.symbol);\n        const createPortfolio = async () =\u003E {\n            const response = await fetch(`https://charts-backend.onrender.com/api/portfolio?tickers=${symbols.join(',')}`);\n            const data = await response.json();\n\n            const maxSharpePortfolio = data.max_sharpe_portfolio;\n            const minVolPortfolio = data.min_vol_portfolio;\n\n            setMaxSharpeAllocation(maxSharpePortfolio.Allocation);\n            setMaxSharpeAnnualisedReturn(maxSharpePortfolio[\"Annualised Return\"]);\n            setMaxSharpeAnnualisedVolatility(maxSharpePortfolio[\"Annualised Volatility\"]);\n\n            setMinVolAllocation(minVolPortfolio.Allocation);\n            setMinVolAnnualisedReturn(minVolPortfolio[\"Annualised Return\"]);\n            setMinVolAnnualisedVolatility(minVolPortfolio[\"Annualised Volatility\"]);\n        };\n\n        createPortfolio();\n    }, [stocks]);\n\n    const renderAllocation = (allocation) =\u003E {\n        return Object.entries(allocation).map(([symbol, weight]) =\u003E (\n            \u003Cdiv key={symbol} className=\"text-2xl text-green-700 mb-2\"\u003E\n                {symbol}: \u003Cspan className=\"text-black\"\u003E{weight}%\u003C/span\u003E\n            \u003C/div\u003E\n        ));\n    };\n\n    return (\n        \u003Cdiv\u003E\n        \u003Cdiv className=\"flex gap-16 p-10 bg-gray-100 rounded-lg shadow-2xl\"\u003E\n            \u003Cdiv\u003E\n                \u003Ch1 className=\"text-4xl font-semibold text-gray-700 mb-6\"\u003EMax Sharpe Portfolio:\u003C/h1\u003E\n                {maxSharpeAllocation ? (\n                    \u003Cdiv\u003E\n                        \u003Cp className=\"text-3xl font-medium text-gray-600 mb-4\"\u003EAllocation:\u003C/p\u003E\n                        {renderAllocation(maxSharpeAllocation)}\n                        \u003Cp className=\"text-lg text-gray-500 mt-6\"\u003EAnnualised Return: {maxSharpeAnnualisedReturn * 100}%\u003C/p\u003E\n                        \u003Cp className=\"text-lg text-gray-500\"\u003EAnnualised Volatility: {maxSharpeAnnualisedVolatility * 100}%\u003C/p\u003E\n                    \u003C/div\u003E\n                ) : (\n                    \u003Cp className=\"text-lg text-gray-500\"\u003ELoading...Max Sharpe Portfolio\u003C/p\u003E\n                )}\n            \u003C/div\u003E\n\n            \u003Cdiv\u003E\n                \u003Ch1 className=\"text-4xl font-semibold text-gray-700 mb-6\"\u003EMin Volatility Portfolio:\u003C/h1\u003E\n                {minVolAllocation ? (\n                    \u003Cdiv\u003E\n                        \u003Cp className=\"text-3xl font-medium text-gray-600 mb-4\"\u003EAllocation:\u003C/p\u003E\n                        {renderAllocation(minVolAllocation)}\n                        \u003Cp className=\"text-lg text-gray-500 mt-6\"\u003EAnnualised Return: {minVolAnnualisedReturn * 100}%\u003C/p\u003E\n                        \u003Cp className=\"text-lg text-gray-500\"\u003EAnnualised Volatility: {minVolAnnualisedVolatility * 100}%\u003C/p\u003E\n                    \u003C/div\u003E\n                ) : (\n                    \u003Cp className=\"text-lg text-gray-500\"\u003ELoading...Min Volatility Portfolio\u003C/p\u003E\n                )}\n            \u003C/div\u003E\n        \u003C/div\u003E\n        \u003C/div\u003E\n    );\n}\n\nexport default PortfolioComponent;",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/components/PortfolioComponent.js"
      },
      {
        "file_name": "candleStick.js",
        "document_type": "js",
        "content": "import React from 'react';\nimport Chart from 'react-apexcharts';\n\nconst Candlestick = ({ data, stock }) =\u003E {\n  const options = {\n    chart: {\n      type: 'candlestick',\n      height: 350\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    title: {\n      text: `${stock ? stock.name : 'Stock'} Price Movement`,\n      align: 'left'\n    }\n  };\n\n  return (\n    \u003Cdiv id=\"chart\"\u003E\n      {data === null ? \u003Cp\u003ELoading...\u003C/p\u003E : \u003CChart options={options} series={data.series} type=\"candlestick\" height={350} /\u003E}\n    \u003C/div\u003E\n  );\n};\n\nexport default Candlestick;\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/components/candleStick.js"
      },
      {
        "file_name": "chartsPanel.js",
        "document_type": "js",
        "content": "import { StockContext } from \"../context/context\";\nimport { useContext, useState } from \"react\";\nimport { IoIosClose } from \"react-icons/io\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport StockComponent from \"../components/stockComponent\";\nimport PortfolioComponent from \"../components/PortfolioComponent\";\n\nconst ChartsPanel = () =\u003E {\n    const { stocks, setStocks } = useContext(StockContext);\n    const [activeIndex, setActiveIndex] = useState(stocks.length ? 0 : null); // Initialize with a valid index if stocks exist\n\n    const handleClick = (index) =\u003E {\n        setActiveIndex(index); // Set the clicked component as active\n    };\n    \n    const handleDelete = (index) =\u003E {\n        setStocks(stocks.filter((_, i) =\u003E i !== index));\n    };\n\n    return (\n        \u003Cdiv className=\"bg-slate-100 w-[90%] h-[90%] rounded-lg flex flex-col justify-between\"\u003E\n            {/* Other chart content goes here */}\n            \u003Cdiv className=\"flex-grow flex items-center justify-center\"\u003E\n                {activeIndex === stocks.length ? (\n                        \u003CPortfolioComponent stocks={stocks} /\u003E\n                    ) : (\n                        \u003CStockComponent stock={stocks[activeIndex]} /\u003E\n                    )}\n            \u003C/div\u003E \n            \u003Cdiv className=\"flex justify-center\"\u003E\n                \u003Cdiv className=\"flex flex-row gap-4 mb-3 overflow-x-auto\" style={{ maxWidth: \"1000px\" }}\u003E\n                    {stocks.map((stock, index) =\u003E (\n                            \u003Cdiv\n                                key={index}\n                                className={`bg-slate-200 p-4 rounded-lg hover:bg-green-500 hover:text-white ${activeIndex === index ? 'border-2 border-green-500' : ''}`}\n                                onClick={() =\u003E handleClick(index)}\n                            \u003E\n                                \u003Cdiv className=\"flex justify-between items-center\"\u003E\n                                    \u003Cdiv\u003E\n                                        \u003Ch1\u003E{stock.name}\u003C/h1\u003E\n                                        \u003Ch2\u003E{stock.symbol}\u003C/h2\u003E\n                                    \u003C/div\u003E\n                                    \u003CIoIosClose\n                                        className=\"cursor-pointer text-xl ml-2\"\n                                        onClick={(e) =\u003E {\n                                            e.stopPropagation();\n                                            handleDelete(index);\n                                        }}\n                                    /\u003E\n                                \u003C/div\u003E\n                            \u003C/div\u003E\n                        ))}\n                    \u003Cdiv \n                        className={`bg-slate-200 p-4 rounded-lg flex items-center justify-center hover:bg-green-500 hover:text-white ${activeIndex === stocks.length ? 'border-2 border-green-500' : ''}`}\n                        onClick={() =\u003E handleClick(stocks.length)}\n                    \u003E\n                        \u003Ch1\u003EPortfolio\u003C/h1\u003E\n                    \u003C/div\u003E\n                \u003C/div\u003E\n            \u003C/div\u003E\n        \u003C/div\u003E\n    );\n}\n\nexport default ChartsPanel;\n\n\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/components/chartsPanel.js"
      },
      {
        "file_name": "dashboardPanel.js",
        "document_type": "js",
        "content": "import React, { useState, useEffect, useContext } from 'react';\nimport { IoIosAddCircle } from \"react-icons/io\";\nimport { StockContext } from '../context/context';\n\n\n\nconst DashboardPanel = () =\u003E {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [stockObjects, setStockObjects] = useState([]);\n    const { stocks, setStocks } = useContext(StockContext);\n\n\n    useEffect(() =\u003E {\n        if (searchTerm) {\n            const fetchStocks = async () =\u003E {\n                try {\n                    const response = await fetch(`https://yfapi.net/v6/finance/autocomplete?query=${searchTerm}&lang=en`, {\n                        headers: {\n                            'x-api-key': 'o8fuf3bUKL9WTnqUcbO0DY7Y68ZkVcj2zZqfJls3' // You need to get an API key from Yahoo Finance API\n                        }\n                    });\n                    const data = await response.json();\n                    setStockObjects(data.ResultSet.Result.slice(0, 10)); // Get the first 10 results\n                } catch (error) {\n                    console.error(\"Error fetching stock names:\", error);\n                }\n            };\n            fetchStocks();\n        } else {\n            setStockObjects([]);\n        }\n    }, [searchTerm]);\n\n    const addStock = (stock) =\u003E {\n        setStocks([...stocks, stock]);\n    };\n\n    return (\n        \u003Cdiv className=\"h-dvh rounded-tl-lg rounded-bl-lg bg-green-600\"\u003E\n            \u003Cdiv className='pt-11'\u003E\n                \u003Ch1 className='text-3xl text-white'\u003EFind Securities\u003C/h1\u003E\n                \u003Cinput\n                    type=\"text\"\n                    placeholder=\"Add New Stocks\"\n                    className=\"w-3/4 mt-5 p-2 rounded-lg\"\n                    value={searchTerm}\n                    onChange={(e) =\u003E setSearchTerm(e.target.value)}\n                /\u003E\n                \u003Cul className=\"mt-5\"\u003E\n                    {stockObjects.map((stock, index) =\u003E (\n                        \u003Cli key={index} className=\"text-white mb-5\"\u003E\n                            \u003Cdiv onClick={() =\u003E addStock(stock)}\u003E\n                                {stock.name} \n                            \u003C/div\u003E\n                        \u003C/li\u003E\n                    ))}\n                \u003C/ul\u003E\n            \u003C/div\u003E\n        \u003C/div\u003E\n    );\n}\n\nexport default DashboardPanel;\n\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/components/dashboardPanel.js"
      },
      {
        "file_name": "stockComponent.js",
        "document_type": "js",
        "content": "import React, { useEffect, useState } from 'react';\nimport Candlestick from './candleStick';\n\nconst StockComponent = ({ stock }) =\u003E {\n    const [showCandlestick, setShowCandlestick] = useState(false);\n    const [stockData, setStockData] = useState(null);\n    const [sampleStock, setSampleStock] = useState(null);\n\n    useEffect(() =\u003E {\n        const fetchStockData = async () =\u003E {\n            try {\n                const response = await fetch(`https://charts-backend.onrender.com/api/history?ticker=${stock.symbol}`);\n                const data = await response.json();\n                setStockData(data);\n                const sampleResponse = await fetch(`https://charts-backend.onrender.com/api/stock?ticker=${stock.symbol}`);\n                const sampleData = await sampleResponse.json();\n                setSampleStock(sampleData);\n            } catch (error) {\n                console.error(\"Error fetching stock data:\", error);\n            }\n        };\n        fetchStockData();\n    }, [stock.symbol]);\n\n\n    return (\n        \u003Cdiv className=\"flex gap-16 p-10 w-[90%] bg-gray-100 rounded-lg shadow-2xl\"\u003E\n            {stock ? (\n                \u003Cdiv className='w-full'\u003E\n                    \u003Cdiv className=\"relative items-center\"\u003E\n                        \u003Cbutton\n                            onClick={() =\u003E setShowCandlestick(!showCandlestick)}\n                            className=\"bg-white border-solid border-2 rounded-lg px-2 border-black\"\n                        \u003E\n                            {showCandlestick ? 'Show Info' : 'Show Chart'}\n                        \u003C/button\u003E\n                    \u003C/div\u003E\n                    \u003Cdiv\u003E\n                        {showCandlestick ? (\n                            \u003CCandlestick data={stockData} stock={stock} /\u003E\n                        ) : (\n                            \u003Cdiv\u003E\n                                \u003Ch1 className=\"text-4xl font-semibold text-gray-700 mb-6\"\u003E{stock.name}\u003C/h1\u003E\n                                \u003Cp className=\"text-2xl text-gray-600 mb-4\"\u003E{stock.symbol}\u003C/p\u003E\n                                {sampleStock ? (\n                                \u003Cdiv\u003E\n                                    \u003Cp className=\"text-lg text-gray-500 mt-6\"\u003EToday's Opening: ${sampleStock.today_open}\u003C/p\u003E\n                                    \u003Cp className=\"text-lg text-black font-bold\"\u003ERelated News \u003C/p\u003E\n                                    \u003Cdiv\u003E\n                                        {sampleStock.news.map((item, index) =\u003E (\n                                            \u003Cdiv key={index} className=\"mt-4 border border-gray-300 rounded p-4\"\u003E\n                                                \u003Ca\n                                                    href={item.link}\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                    className=\"text-blue-500 hover:underline\"\n                                                \u003E\n                                                    {item.title}\n                                                \u003C/a\u003E\n                                                \u003Cp className=\"text-gray-600\"\u003E{item.publisher}\u003C/p\u003E\n                                            \u003C/div\u003E\n                                        ))}\n                                    \u003C/div\u003E\n                                \u003C/div\u003E\n                                ) : \u003Cp\u003ELoading...\u003C/p\u003E\n                                }\n                            \u003C/div\u003E\n                        )}\n                    \u003C/div\u003E\n                \u003C/div\u003E\n            ) : (\n                \u003Cp className=\"text-lg text-gray-500\"\u003ENo data available for this stock\u003C/p\u003E\n            )}\n        \u003C/div\u003E\n    );\n}\n\nexport default StockComponent;\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/components/stockComponent.js"
      },
      {
        "file_name": "stockItem.js",
        "document_type": "js",
        "content": "",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/components/stockItem.js"
      },
      {
        "file_name": "context.js",
        "document_type": "js",
        "content": "import React, { createContext, useState } from 'react';\n\nexport const StockContext = createContext();\n\nexport const StockContextProvider = ({ children }) =\u003E {\n    const [stocks, setStocks] = useState([\n        {\n            exch: \"NMS\",\n            exchDisp: \"NASDAQ\",\n            name: \"Apple Inc.\",\n            symbol: \"AAPL\",\n            type: \"S\",\n            typeDisp: \"Equity\"\n        },\n        {\n            exch: \"NYQ\",\n            exchDisp: \"NYSE\",\n            name: \"Microsoft Corporation\",\n            symbol: \"MSFT\",\n            type: \"S\",\n            typeDisp: \"Equity\"\n        },\n        {\n            exch: \"NMS\",\n            exchDisp: \"NASDAQ\",\n            name: \"Amazon.com Inc.\",\n            symbol: \"AMZN\",\n            type: \"S\",\n            typeDisp: \"Equity\"\n        },\n        {\n            exch: \"NMS\",\n            exchDisp: \"NASDAQ\",\n            name: \"Alphabet Inc. (Google)\",\n            symbol: \"GOOGL\",\n            type: \"S\",\n            typeDisp: \"Equity\"\n        },\n        {\n            exch: \"NYQ\",\n            exchDisp: \"NYSE\",\n            name: \"Tesla, Inc.\",\n            symbol: \"TSLA\",\n            type: \"S\",\n            typeDisp: \"Equity\"\n        }\n    ])\n\n    return (\n        \u003CStockContext.Provider value={{ stocks, setStocks }}\u003E\n            {children}\n        \u003C/StockContext.Provider\u003E\n    );\n}",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/context/context.js"
      },
      {
        "file_name": "index.css",
        "document_type": "css",
        "content": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/index.css"
      },
      {
        "file_name": "index.js",
        "document_type": "js",
        "content": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  \u003CReact.StrictMode\u003E\n    \u003CBrowserRouter\u003E\n      \u003CApp /\u003E\n    \u003C/BrowserRouter\u003E\n  \u003C/React.StrictMode\u003E\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/index.js"
      },
      {
        "file_name": "apiCalls.js",
        "document_type": "js",
        "content": "\nvar url = 'https://www.alphavantage.co/query?function=TIME_SERIES_WEEKLY&symbol=${KEY}&apikey=XFQ0KAPZZLGPMUAX'",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/lib/apiCalls.js"
      },
      {
        "file_name": "output.css",
        "document_type": "css",
        "content": "/*\n! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com\n*/\n\n/*\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\n*/\n\n*,\n::before,\n::after {\n  box-sizing: border-box;\n  /* 1 */\n  border-width: 0;\n  /* 2 */\n  border-style: solid;\n  /* 2 */\n  border-color: #e5e7eb;\n  /* 2 */\n}\n\n::before,\n::after {\n  --tw-content: '';\n}\n\n/*\n1. Use a consistent sensible line-height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n3. Use a more readable tab size.\n4. Use the user's configured `sans` font-family by default.\n5. Use the user's configured `sans` font-feature-settings by default.\n6. Use the user's configured `sans` font-variation-settings by default.\n7. Disable tap highlights on iOS\n*/\n\nhtml,\n:host {\n  line-height: 1.5;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n  /* 3 */\n  tab-size: 4;\n  /* 3 */\n  font-family: ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n  /* 4 */\n  font-feature-settings: normal;\n  /* 5 */\n  font-variation-settings: normal;\n  /* 6 */\n  -webkit-tap-highlight-color: transparent;\n  /* 7 */\n}\n\n/*\n1. Remove the margin in all browsers.\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\n*/\n\nbody {\n  margin: 0;\n  /* 1 */\n  line-height: inherit;\n  /* 2 */\n}\n\n/*\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n3. Ensure horizontal rules are visible by default.\n*/\n\nhr {\n  height: 0;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  border-top-width: 1px;\n  /* 3 */\n}\n\n/*\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr:where([title]) {\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n}\n\n/*\nRemove the default font size and weight for headings.\n*/\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/*\nReset links to optimize for opt-in styling instead of opt-out.\n*/\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/*\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/*\n1. Use the user's configured `mono` font-family by default.\n2. Use the user's configured `mono` font-feature-settings by default.\n3. Use the user's configured `mono` font-variation-settings by default.\n4. Correct the odd `em` font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n  /* 1 */\n  font-feature-settings: normal;\n  /* 2 */\n  font-variation-settings: normal;\n  /* 3 */\n  font-size: 1em;\n  /* 4 */\n}\n\n/*\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n  font-size: 80%;\n}\n\n/*\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/*\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n3. Remove gaps between table borders by default.\n*/\n\ntable {\n  text-indent: 0;\n  /* 1 */\n  border-color: inherit;\n  /* 2 */\n  border-collapse: collapse;\n  /* 3 */\n}\n\n/*\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n3. Remove default padding in all browsers.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-feature-settings: inherit;\n  /* 1 */\n  font-variation-settings: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  font-weight: inherit;\n  /* 1 */\n  line-height: inherit;\n  /* 1 */\n  letter-spacing: inherit;\n  /* 1 */\n  color: inherit;\n  /* 1 */\n  margin: 0;\n  /* 2 */\n  padding: 0;\n  /* 3 */\n}\n\n/*\nRemove the inheritance of text transform in Edge and Firefox.\n*/\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Remove default button styles.\n*/\n\nbutton,\ninput:where([type='button']),\ninput:where([type='reset']),\ninput:where([type='submit']) {\n  -webkit-appearance: button;\n  /* 1 */\n  background-color: transparent;\n  /* 2 */\n  background-image: none;\n  /* 2 */\n}\n\n/*\nUse the modern Firefox focus style for all focusable elements.\n*/\n\n:-moz-focusring {\n  outline: auto;\n}\n\n/*\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\n*/\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\n/*\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n  vertical-align: baseline;\n}\n\n/*\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/*\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */\n}\n\n/*\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to `inherit` in Safari.\n*/\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n}\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n  display: list-item;\n}\n\n/*\nRemoves the default spacing and border for appropriate elements.\n*/\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nlegend {\n  padding: 0;\n}\n\nol,\nul,\nmenu {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/*\nReset default styling for dialogs.\n*/\n\ndialog {\n  padding: 0;\n}\n\n/*\nPrevent resizing textareas horizontally by default.\n*/\n\ntextarea {\n  resize: vertical;\n}\n\n/*\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\n2. Set the default placeholder color to the user's configured gray 400 color.\n*/\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1;\n  /* 1 */\n  color: #9ca3af;\n  /* 2 */\n}\n\n/*\nSet the default cursor for buttons.\n*/\n\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\n\n/*\nMake sure disabled buttons don't get the pointer cursor.\n*/\n\n:disabled {\n  cursor: default;\n}\n\n/*\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\n   This can trigger a poorly considered lint error in some tools but is included by design.\n*/\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block;\n  /* 1 */\n  vertical-align: middle;\n  /* 2 */\n}\n\n/*\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\n*/\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/* Make elements with the HTML hidden attribute stay hidden by default */\n\n[hidden] {\n  display: none;\n}\n\n*, ::before, ::after {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-gradient-from-position:  ;\n  --tw-gradient-via-position:  ;\n  --tw-gradient-to-position:  ;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n  --tw-contain-size:  ;\n  --tw-contain-layout:  ;\n  --tw-contain-paint:  ;\n  --tw-contain-style:  ;\n}\n\n::backdrop {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-gradient-from-position:  ;\n  --tw-gradient-via-position:  ;\n  --tw-gradient-to-position:  ;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n  --tw-contain-size:  ;\n  --tw-contain-layout:  ;\n  --tw-contain-paint:  ;\n  --tw-contain-style:  ;\n}\n\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/output.css"
      },
      {
        "file_name": "dashboard.js",
        "document_type": "js",
        "content": "import DashboardPanel from \"../components/dashboardPanel\";\nimport ChartsPanel from \"../components/chartsPanel\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\n\nconst Dashboard = () =\u003E {\n    const navigate = useNavigate();\n\n    return (\n        \u003Cdiv className=\"relative h-screen\"\u003E \n            \u003Cbutton\n                onClick={() =\u003E navigate(-1)}\n                className=\"absolute top-4 left-4 p-2\"\n            \u003E\n                \u003CBiArrowBack size={24} /\u003E\n            \u003C/button\u003E\n            \u003Cdiv className=\"flex h-full\"\u003E\n                \u003Cdiv className=\"w-3/4 flex items-center justify-center\"\u003E\n                    \u003CChartsPanel /\u003E\n                \u003C/div\u003E\n                \u003Cdiv className=\"w-1/4\"\u003E\n                    \u003CDashboardPanel /\u003E\n                \u003C/div\u003E\n            \u003C/div\u003E\n        \u003C/div\u003E\n    );\n}\n\nexport default Dashboard;\n\n\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/pages/dashboard.js"
      },
      {
        "file_name": "home.js",
        "document_type": "js",
        "content": "import {Link} from 'react-router-dom';\n\nconst Home = () =\u003E {\n    return (\n        \u003Cdiv className=\"font-extrabold h-screen flex items-center justify-center flex-col\"\u003E\n            \u003Ch1 className=\"text-green-400 text-8xl\"\u003E\n                charts\n            \u003C/h1\u003E\n            \u003Cp className=\"text-slate-400 text-2xl\"\u003E\n                A simple way to improve your portfolio\n            \u003C/p\u003E\n            \u003Cdiv className=\"flex flex-row text-lg pt-2\"\u003E\n                \u003Cbutton className=\"bg-slate-200 flex-grow px-4 py-2 rounded-md hover:bg-slate-400 mr-10\"\u003E\u003CLink to=\"/dashboard\"\u003Evisit dashboard \u003C/Link\u003E\u003C/button\u003E\n                \u003Cbutton className=\"bg-green-400 text-white flex-grow px-4 py-2 rounded-md hover:bg-slate-400\"\u003E\u003CLink to=\"/how\"\u003Ehow it works\u003C/Link\u003E\u003C/button\u003E\n            \u003C/div\u003E\n        \u003C/div\u003E\n    );\n    }   \nexport default Home;",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/pages/home.js"
      },
      {
        "file_name": "how.js",
        "document_type": "js",
        "content": "import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ef from '../ef.png';\n\nconst How = () =\u003E {\n  return (\n    \u003Cdiv className='flex flex-col items-center justify-center'\u003E\n      \u003Ch1 className=\"text-green-400 font-extrabold text-4xl mt-2 mb-8\"\u003Ehow this works\u003C/h1\u003E\n      \u003Cp className=\"text-slate-400 text-2xl mb-8\"\u003E\n        This is a simple app that allows you to find the most efficient distribution of stocks based on a portfolio of your choice. It calculates the optimal weights of each stock in your portfolio based on the efficient frontier. The efficient frontier is a set of optimal portfolios that offer the highest expected return for a defined level of risk or the lowest risk for a given level of expected return. Portfolios that lie below the efficient frontier are sub-optimal because they do not provide enough return for the level of risk. Portfolios that cluster to the right of the efficient frontier are also sub-optimal because they have a higher level of risk for the defined rate of return.\n      \u003C/p\u003E\n      \u003Cimg src={ef} alt=\"efficient frontier\" className=\"w-1/2\" /\u003E\n      \u003Cp className=\"text-slate-400 text-2xl mt-2 mb-8\"\u003E\n        The app uses the mean and standard deviation of the stocks in your portfolio to calculate the optimal weights. The mean is the average return of the stock over a certain period, and the standard deviation is a measure of the stock's volatility. In order to make an estimation of what the most optimal portfolio would look like, the app runs a Monte Carlo simulation on 25,000 possible stock distributions. The simulation generates random weights for each stock in your portfolio, and then calculates the expected return and standard deviation of each distribution. \n        The app then returns two portfolios: the portfolio with the highest sharpe ration and the portfolio with the lowest standard deviation. The sharpe ratio is a measure of the risk-adjusted return of a financial portfolio. It is calculated by subtracting the risk-free rate of return from the expected return of the portfolio and dividing the result by the standard deviation of the portfolio's return. The higher the sharpe ratio, the better the risk-adjusted return of the portfolio.\n        The risk free rate used here is the 52 week treasury bill rate, currently at 5.15%\n      \u003C/p\u003E\n      \u003Cdiv className=\"flex flex-row text-lg pt-2\"\u003E\n        \u003Cbutton className=\"bg-green-400 text-white flex-grow px-4 py-2 rounded-md hover:bg-slate-400\"\u003E\u003CLink to=\"/\"\u003Eback to home\u003C/Link\u003E\u003C/button\u003E\n        \u003C/div\u003E\n    \u003C/div\u003E\n  );\n};\n\nexport default How;\n\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/pages/how.js"
      },
      {
        "file_name": "test.js",
        "document_type": "js",
        "content": "import React, { useContext, useEffect, useState } from 'react';\nimport { StockContext } from \"../context/context\";\n\nconst Test = () =\u003E {\n    const { stocks, fetchStockPrices } = useContext(StockContext);\n    const [localStocks, setLocalStocks] = useState([]);\n\n    useEffect(() =\u003E {\n        const fetchData = async () =\u003E {\n            await fetchStockPrices(['AAPL', 'TSLA', 'GOOG']); // Example symbols\n            setLocalStocks(stocks);\n        };\n        fetchData();\n    }, [fetchStockPrices, stocks]);\n\n    return (\n        \u003Cdiv className=\"bg-slate-100 flex items-center justify-center w-[90%] h-[90%] rounded-lg\"\u003E\n            \u003Cdiv className=\"grid grid-cols-2 gap-4\"\u003E\n                {localStocks.map((stock, index) =\u003E (\n                    \u003Cdiv key={index} className=\"bg-slate-200 p-4 rounded-lg\"\u003E\n                        \u003Ch1\u003E{stock.symbol}\u003C/h1\u003E\n                        \u003Ch2\u003E{stock.price}\u003C/h2\u003E\n                    \u003C/div\u003E\n                ))}\n            \u003C/div\u003E\n        \u003C/div\u003E\n    );\n}\n\nexport default Test;\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/pages/test.js"
      },
      {
        "file_name": "reportWebVitals.js",
        "document_type": "js",
        "content": "const reportWebVitals = onPerfEntry =\u003E {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) =\u003E {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/reportWebVitals.js"
      },
      {
        "file_name": "setupTests.js",
        "document_type": "js",
        "content": "// jest-dom adds custom jest matchers for asserting on DOM nodes.\n// allows you to do things like:\n// expect(element).toHaveTextContent(/react/i)\n// learn more: https://github.com/testing-library/jest-dom\nimport '@testing-library/jest-dom';\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/src/setupTests.js"
      },
      {
        "file_name": "tailwind.config.js",
        "document_type": "js",
        "content": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\"./src/**/*.{html,js}\"],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n\n",
        "file_url": "https://github.com/chrisdten3/charts/blob/main/tailwind.config.js"
      }
    ]
  }